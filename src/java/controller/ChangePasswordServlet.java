package controller;import dao.CustomerDAO;import jakarta.servlet.ServletException;import jakarta.servlet.annotation.WebServlet;import jakarta.servlet.http.HttpServlet;import jakarta.servlet.http.HttpServletRequest;import jakarta.servlet.http.HttpServletResponse;import jakarta.servlet.http.HttpSession;import java.io.IOException;import model.Customer;import utils.PasswordUtil;@WebServlet(name = "ChangePasswordServlet", urlPatterns = {"/changepassword"})public class ChangePasswordServlet extends HttpServlet {	@Override	protected void doPost(HttpServletRequest request, HttpServletResponse response)			throws ServletException, IOException {		HttpSession session = request.getSession(false);		if (session == null || session.getAttribute("currentUser") == null) {			response.sendRedirect("login.jsp");			return;		}		Customer currentUser = (Customer) session.getAttribute("currentUser");		String currentPassword = request.getParameter("currentPassword");		String newPassword = request.getParameter("newPassword");		String confirmPassword = request.getParameter("confirmPassword");		if (currentPassword == null || newPassword == null || confirmPassword == null				|| currentPassword.isEmpty() || newPassword.isEmpty() || confirmPassword.isEmpty()) {			request.setAttribute("changePwdErr", "Vui lòng nhập đầy đủ thông tin.");			request.getRequestDispatcher("user/user-info.jsp").forward(request, response);			return;		}		if (!PasswordUtil.verifyPassword(currentPassword, currentUser.getPassword())) {			request.setAttribute("changePwdErr", "Mật khẩu hiện tại không đúng.");			request.getRequestDispatcher("user/user-info.jsp").forward(request, response);			return;		}		if (newPassword.length() < 6) {			request.setAttribute("changePwdErr", "Mật khẩu mới phải có ít nhất 6 ký tự.");			request.getRequestDispatcher("user/user-info.jsp").forward(request, response);			return;		}		if (!newPassword.equals(confirmPassword)) {			request.setAttribute("changePwdErr", "Xác nhận mật khẩu không khớp.");			request.getRequestDispatcher("user/user-info.jsp").forward(request, response);			return;		}		CustomerDAO customerDAO = new CustomerDAO();		boolean updated = customerDAO.updatePassword(currentUser.getCustomerId(), newPassword);		if (updated) {			// Cập nhật password trong session user để lần verify tiếp theo đúng			currentUser.setPassword(PasswordUtil.hashPassword(newPassword));			session.setAttribute("currentUser", currentUser);			request.setAttribute("changePwdMsg", "Đổi mật khẩu thành công.");		} else {			request.setAttribute("changePwdErr", "Đổi mật khẩu thất bại. Vui lòng thử lại.");		}		request.getRequestDispatcher("user/user-info.jsp").forward(request, response);	}}